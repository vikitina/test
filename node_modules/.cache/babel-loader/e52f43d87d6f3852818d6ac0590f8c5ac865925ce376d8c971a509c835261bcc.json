{"ast":null,"code":"import MoovieBall from \"./MoovieBall.vue\";\nexport default {\n  data() {\n    return {\n      xCoord: 0,\n      yCoord: 0,\n      width: 0,\n      height: 0,\n      getLeftBound: 0,\n      getRightBound: 0,\n      getTopBound: 0,\n      getBottomBound: 0\n    };\n  },\n  components: {\n    MoovieBall\n  },\n  methods: {\n    onClick(e) {\n      this.xCoord = this.getPreparedX(e);\n      this.yCoord = this.getPreparedY(e);\n      this.$emit(\"updateStatistic\", {\n        x: this.getStatisticX,\n        y: this.getStatisticY\n      });\n    },\n    getPreparedX(e) {\n      console.log('@x ', e.offsetX);\n      const clickCoordinateX = e.pageX - this.getLeftBound;\n      return e.pageX >= this.getLeftBound && e.pageX <= this.getRightBound ? clickCoordinateX : this.xCoord;\n    },\n    getPreparedY(e) {\n      const clickCoordinateY = e.pageY - this.getTopBound;\n      return e.pageY >= this.getTopBound && e.pageY <= this.getBottomBound ? clickCoordinateY : this.yCoord;\n    }\n  },\n  computed: {\n    // getLeftBound() {\n    //   return this.$refs.gridElement.getBoundingClientRect().left;\n    // },\n    // getRightBound() {\n    //   return this.$refs.gridElement.getBoundingClientRect().right;\n    // },\n    // getTopBound() {\n    //   return this.$refs.gridElement.getBoundingClientRect().top;\n    // },\n    // getBottomBound() {\n    //   return this.$refs.gridElement.getBoundingClientRect().bottom;\n    // },\n\n    getStatisticX() {\n      return this.xCoord - this.width * 0.5 >= 0 ? this.xCoord - this.width * 0.5 : -1 * (this.width * 0.5 - this.xCoord);\n    },\n    getStatisticY() {\n      return this.yCoord - this.height * 0.5 <= 0 ? this.height * 0.5 - this.yCoord : -1 * (this.yCoord - this.height * 0.5);\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      const element = this.$refs.gridElement;\n      this.width = element.offsetWidth;\n      this.height = element.offsetHeight;\n      this.xCoord = this.width * 0.5;\n      this.yCoord = this.height * 0.5;\n      this.$emit(\"updateStatistic\", {\n        x: this.getStatisticX,\n        y: this.getStatisticY\n      });\n      this.getLeftBound = this.$refs.gridElement.getBoundingClientRect().left;\n      this.getRightBound = this.$refs.gridElement.getBoundingClientRect().right;\n      this.getTopBound = this.$refs.gridElement.getBoundingClientRect().top;\n      this.getBottomBound = this.$refs.gridElement.getBoundingClientRect().bottom;\n      window.addEventListener(\"resize\", () => {\n        this.getLeftBound = this.$refs.gridElement.getBoundingClientRect().left;\n        this.getRightBound = this.$refs.gridElement.getBoundingClientRect().right;\n        this.getTopBound = this.$refs.gridElement.getBoundingClientRect().top;\n        this.getBottomBound = this.$refs.gridElement.getBoundingClientRect().bottom;\n      });\n    });\n  }\n};","map":{"version":3,"names":["MoovieBall","data","xCoord","yCoord","width","height","getLeftBound","getRightBound","getTopBound","getBottomBound","components","methods","onClick","e","getPreparedX","getPreparedY","$emit","x","getStatisticX","y","getStatisticY","console","log","offsetX","clickCoordinateX","pageX","clickCoordinateY","pageY","computed","mounted","$nextTick","element","$refs","gridElement","offsetWidth","offsetHeight","getBoundingClientRect","left","right","top","bottom","window","addEventListener"],"sources":["src/components/SpecialGrid.vue"],"sourcesContent":["<template lang=\"pug\">\n.special-grid(@click=\"onClick\", ref=\"gridElement\")\n  MoovieBall(:x=\"xCoord\", :y=\"yCoord\")\n</template>\n<script>\nimport MoovieBall from \"./MoovieBall.vue\";\nexport default {\n  data() {\n    return {\n      xCoord: 0,\n      yCoord: 0,\n      width: 0,\n      height: 0,\n      getLeftBound: 0,\n      getRightBound: 0,\n      getTopBound: 0,\n      getBottomBound: 0,\n    };\n  },\n  components: {\n    MoovieBall,\n  },\n  methods: {\n    onClick(e) {\n      this.xCoord = this.getPreparedX(e);\n      this.yCoord = this.getPreparedY(e);\n      this.$emit(\"updateStatistic\", {\n        x: this.getStatisticX,\n        y: this.getStatisticY,\n      });\n    },\n    getPreparedX(e) {\n      console.log('@x ', e.offsetX);\n      const clickCoordinateX = e.pageX - this.getLeftBound;\n      return e.pageX >= this.getLeftBound && e.pageX <= this.getRightBound\n        ? clickCoordinateX\n        : this.xCoord;\n    },\n    getPreparedY(e) {\n      const clickCoordinateY = e.pageY - this.getTopBound;\n      return e.pageY >= this.getTopBound && e.pageY <= this.getBottomBound\n        ? clickCoordinateY\n        : this.yCoord;\n    },\n  },\n\n  computed: {\n    // getLeftBound() {\n    //   return this.$refs.gridElement.getBoundingClientRect().left;\n    // },\n    // getRightBound() {\n    //   return this.$refs.gridElement.getBoundingClientRect().right;\n    // },\n    // getTopBound() {\n    //   return this.$refs.gridElement.getBoundingClientRect().top;\n    // },\n    // getBottomBound() {\n    //   return this.$refs.gridElement.getBoundingClientRect().bottom;\n    // },\n\n    getStatisticX() {\n      return this.xCoord - this.width * 0.5 >= 0\n        ? this.xCoord - this.width * 0.5\n        : -1 * (this.width * 0.5 - this.xCoord);\n    },\n    getStatisticY() {\n      return this.yCoord - this.height * 0.5 <= 0\n        ? this.height * 0.5 - this.yCoord\n        : -1 * (this.yCoord - this.height * 0.5);\n    },\n  },\n  mounted() {\n    this.$nextTick(() => {\n      const element = this.$refs.gridElement;\n      this.width = element.offsetWidth;\n      this.height = element.offsetHeight;\n      this.xCoord = this.width * 0.5;\n      this.yCoord = this.height * 0.5;\n      this.$emit(\"updateStatistic\", {\n        x: this.getStatisticX,\n        y: this.getStatisticY,\n      });\n      this.getLeftBound = this.$refs.gridElement.getBoundingClientRect().left;\n        this.getRightBound =\n          this.$refs.gridElement.getBoundingClientRect().right;\n        this.getTopBound = this.$refs.gridElement.getBoundingClientRect().top;\n        this.getBottomBound =\n          this.$refs.gridElement.getBoundingClientRect().bottom;\n      window.addEventListener(\"resize\", () => {\n        this.getLeftBound = this.$refs.gridElement.getBoundingClientRect().left;\n        this.getRightBound =\n          this.$refs.gridElement.getBoundingClientRect().right;\n        this.getTopBound = this.$refs.gridElement.getBoundingClientRect().top;\n        this.getBottomBound =\n          this.$refs.gridElement.getBoundingClientRect().bottom;\n      });\n    });\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.special-grid {\n  width: 280px;\n  height: 280px;\n  border: 2px solid blue;\n  border-radius: 5px;\n  position: relative;\n\n  background-image: repeating-linear-gradient(#ccc 0 1px, transparent 1px 100%),\n    repeating-linear-gradient(90deg, #ccc 0 1px, transparent 1px 100%);\n  background-size: 70px 70px;\n  &::before {\n    content: \"\";\n    width: 6px;\n    height: 6px;\n    background: red;\n    border-radius: 50%;\n    display: block;\n    position: absolute;\n    top: calc(50% - 3px);\n    left: calc(50% - 3px);\n  }\n  &:hover {\n    box-shadow: 0 0 20px 2px blue;\n  }\n}\n</style>"],"mappings":"AAKA,OAAAA,UAAA;AACA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,MAAA;MACAC,KAAA;MACAC,MAAA;MACAC,YAAA;MACAC,aAAA;MACAC,WAAA;MACAC,cAAA;IACA;EACA;EACAC,UAAA;IACAV;EACA;EACAW,OAAA;IACAC,QAAAC,CAAA;MACA,KAAAX,MAAA,QAAAY,YAAA,CAAAD,CAAA;MACA,KAAAV,MAAA,QAAAY,YAAA,CAAAF,CAAA;MACA,KAAAG,KAAA;QACAC,CAAA,OAAAC,aAAA;QACAC,CAAA,OAAAC;MACA;IACA;IACAN,aAAAD,CAAA;MACAQ,OAAA,CAAAC,GAAA,QAAAT,CAAA,CAAAU,OAAA;MACA,MAAAC,gBAAA,GAAAX,CAAA,CAAAY,KAAA,QAAAnB,YAAA;MACA,OAAAO,CAAA,CAAAY,KAAA,SAAAnB,YAAA,IAAAO,CAAA,CAAAY,KAAA,SAAAlB,aAAA,GACAiB,gBAAA,GACA,KAAAtB,MAAA;IACA;IACAa,aAAAF,CAAA;MACA,MAAAa,gBAAA,GAAAb,CAAA,CAAAc,KAAA,QAAAnB,WAAA;MACA,OAAAK,CAAA,CAAAc,KAAA,SAAAnB,WAAA,IAAAK,CAAA,CAAAc,KAAA,SAAAlB,cAAA,GACAiB,gBAAA,GACA,KAAAvB,MAAA;IACA;EACA;EAEAyB,QAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAV,cAAA;MACA,YAAAhB,MAAA,QAAAE,KAAA,cACA,KAAAF,MAAA,QAAAE,KAAA,SACA,WAAAA,KAAA,cAAAF,MAAA;IACA;IACAkB,cAAA;MACA,YAAAjB,MAAA,QAAAE,MAAA,cACA,KAAAA,MAAA,cAAAF,MAAA,GACA,WAAAA,MAAA,QAAAE,MAAA;IACA;EACA;EACAwB,QAAA;IACA,KAAAC,SAAA;MACA,MAAAC,OAAA,QAAAC,KAAA,CAAAC,WAAA;MACA,KAAA7B,KAAA,GAAA2B,OAAA,CAAAG,WAAA;MACA,KAAA7B,MAAA,GAAA0B,OAAA,CAAAI,YAAA;MACA,KAAAjC,MAAA,QAAAE,KAAA;MACA,KAAAD,MAAA,QAAAE,MAAA;MACA,KAAAW,KAAA;QACAC,CAAA,OAAAC,aAAA;QACAC,CAAA,OAAAC;MACA;MACA,KAAAd,YAAA,QAAA0B,KAAA,CAAAC,WAAA,CAAAG,qBAAA,GAAAC,IAAA;MACA,KAAA9B,aAAA,GACA,KAAAyB,KAAA,CAAAC,WAAA,CAAAG,qBAAA,GAAAE,KAAA;MACA,KAAA9B,WAAA,QAAAwB,KAAA,CAAAC,WAAA,CAAAG,qBAAA,GAAAG,GAAA;MACA,KAAA9B,cAAA,GACA,KAAAuB,KAAA,CAAAC,WAAA,CAAAG,qBAAA,GAAAI,MAAA;MACAC,MAAA,CAAAC,gBAAA;QACA,KAAApC,YAAA,QAAA0B,KAAA,CAAAC,WAAA,CAAAG,qBAAA,GAAAC,IAAA;QACA,KAAA9B,aAAA,GACA,KAAAyB,KAAA,CAAAC,WAAA,CAAAG,qBAAA,GAAAE,KAAA;QACA,KAAA9B,WAAA,QAAAwB,KAAA,CAAAC,WAAA,CAAAG,qBAAA,GAAAG,GAAA;QACA,KAAA9B,cAAA,GACA,KAAAuB,KAAA,CAAAC,WAAA,CAAAG,qBAAA,GAAAI,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}